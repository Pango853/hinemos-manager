allprojects{
	group = 'info.hinemos'
	version = '6.1.2'

	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'jacoco'
	apply plugin: 'eclipse'
	//apply plugin: 'org.sonarqube' version '2.6'

	task hello{
		doLast{ task->
			println "I'm $task.project.name"
		}
	}
}

ext.sharedManifest = manifest{
	attributes('Hinemos-Version': version, 'Build-Date': new Date().format('yyyy-MM-dd HH:mm:ss', TimeZone.getTimeZone('UTC')))
}

subprojects{
	repositories{
		mavenCentral()
		maven { url 'http://pango853.github.io/mvnrepo' }
	}
	tasks.withType(JavaCompile){
		options.encoding = 'UTF-8'
		doFirst {
			if (sourceCompatibility == '1.7' && System.env.JDK7_HOME != null) {
				options.fork = true
				options.bootstrapClasspath = files("$System.env.JDK7_HOME/jre/lib/rt.jar", "$File.pathSeparator$System.env.JDK7_HOME/jre/lib/jsse.jar")
			}else if (System.env.JAVA_HOME != null) {
				// Overcome "package com.sun.xml.internal.xxx does not exist" when compiling
				options.fork = true
				options.forkOptions.executable = 'javac'
				options.compilerArgs << '-XDignore.symbol.file'
				//options.bootstrapClasspath = files("$System.env.JAVA_HOME/jre/lib/rt.jar",
				//	"$File.pathSeparator$System.env.JAVA_HOME/jre/lib/jce.jar",
				//	"$File.pathSeparator$System.env.JAVA_HOME/jre/lib/jsse.jar")
			}
		}
	}
	jar{
		manifest = project.manifest { from sharedManifest }
	}
	// Upload jar to maven repository
	uploadArchives {
		repositories {
			mavenDeployer {
				repository(url: "file:${System.getProperty('user.home')}/.m2/repository")
			}
		}
	}

	hello {
		doLast {println "- I depend on water"}
			afterEvaluate { Project project ->
				if (project.isRunnable) { doLast {
					println '- I love to spend time in the arctic waters.' }
			}
		}
	}
}


Closure cl = { task -> println "I'm $task.project.name" }
task('hello2').doLast(cl)
project(':common') {
	task('hello2').doLast(cl)
}